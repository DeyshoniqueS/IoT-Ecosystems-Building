#include <DHT_Async.h>
#define DHT_SENSOR_TYPE DHT_TYPE_11

int DHT_SENSOR_PIN = 2; 
DHT_Async dht_sensor( DHT_SENSOR_PIN, DHT_SENSOR_TYPE );

const long interval = 60000;
unsigned long previousMillis = 0;

#include <LiquidCrystal.h>
LiquidCrystal lcd(6, 7, 13, 12, 11, 10);


bool fanControl = false;
int fanControl_count = 0; 

#define ENABLE 5
#define DIRA 3
#define DIRB 4

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  lcd.begin(16, 2);

  pinMode(ENABLE, OUTPUT);
  pinMode (DIRA, OUTPUT);
  pinMode (DIRB, OUTPUT);

  digitalWrite(DIRA,HIGH);
  digitalWrite(DIRB,LOW);
  digitalWrite(ENABLE,LOW);
}
/* * Poll for a measurement, keeping the state machine alive.  Returns
 * true if a measurement is available.
 */
static bool measure_environment( float *temperature, float *humidity ) {
  static unsigned long measurement_timestamp = millis( );

  /* Measure once every four seconds. */
  if( millis( ) - measurement_timestamp > 3000ul )
  {
    if( dht_sensor.measure( temperature, humidity ) == true )
    {
      measurement_timestamp = millis( );
      return( true );
    }

}
}

void loop() {
  // put your main code here, to run repeatedly:
   static unsigned long measurement_timestamp = millis();
  
  float temperature;
  float humidity;


// Check if 1 minute has passed (60000 ms)
  if (measurement_timestamp - previousMillis >= interval) {
    previousMillis = measurement_timestamp;  // Update the last check time
    fanControl_count = 0;  // Reset the counter every minute
    Serial.println("Minute elapsed. Counter reset.");
  }


  if( measure_environment( &temperature, &humidity ) == true )
  {
    if (temperature > 29.0) {
      digitalWrite(ENABLE,HIGH);
      if(! fanControl) {
        fanControl_count ++;
        Serial.println("High temperature - turn on fan");
        fanControl = true;
      }
    } else {
      digitalWrite(ENABLE,LOW);
      if(fanControl) {
        Serial.println("Low temperature - turn off fan");
        fanControl = false;
      }

      if (fanControl_count >= 5) {
    Serial.println("Anomaly detected; power down.");
    lcd.print("Anomaly detected; power down.");
    fanControl_count = 0; 
  }

    }
    Serial.print( "T = " );
    Serial.print( temperature, 1 );
    Serial.print( " deg. C, H = " );
    Serial.print( humidity, 1 );
    Serial.println( "%" );

  }



}
